services:
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: go_mosquitto
    environment:
      - TZ=Europe/Madrid
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - "1883:1883"
      - "9001:9001"
    restart: unless-stopped

  mysql_db:
    image: mysql:8.0
    container_name: go_mysql
    restart: unless-stopped

    environment:
      TZ: "Europe/Andorra"
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: database_name
      MYSQL_USER: user
      MYSQL_PASSWORD: password

    ports:
      - "3306:3306"

    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/db_data/init.sql:/docker-entrypoint-initdb.d/init.sql # Seed mysql

    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD" ]
      timeout: 20s
      retries: 10
      start_period: 30s

    command: --sql_mode="STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION"

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.11
    container_name: go_redpanda
    restart: unless-stopped
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://go_redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://go_redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr go_redpanda:33145
      - --advertise-rpc-addr go_redpanda:33145
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --default-log-level=info
    volumes:
      - go_redpanda:/var/lib/redpanda/data
    ports:
      - "18081:18081"
      - "18082:18082"
      - "19092:19092"
      - "19644:9644"

  redpanda_console:
    container_name: go_console_redpanda
    image: docker.redpanda.com/redpandadata/console:v2.4.6
    restart: unless-stopped
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["go_redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://go_redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://go_redpanda:9644"]
    ports:
      - "8080:8080"
    depends_on:
      - redpanda

  influxdb2:
    container_name: go_influxdb2
    image: influxdb:2
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influxdb2-admin-username
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb2-admin-password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb2-admin-token
      DOCKER_INFLUXDB_INIT_ORG: docs
      DOCKER_INFLUXDB_INIT_BUCKET: home
    secrets:
      - influxdb2-admin-username
      - influxdb2-admin-password
      - influxdb2-admin-token
    volumes:
      - type: volume
        source: influxdb2-data
        target: /var/lib/influxdb2
      - type: volume
        source: influxdb2-config
        target: /etc/influxdb2

secrets:
  influxdb2-admin-username:
    file: .env.influxdb2-admin-username
  influxdb2-admin-password:
    file: .env.influxdb2-admin-password
  influxdb2-admin-token:
    file: .env.influxdb2-admin-token

volumes:
  db_data:
  go_redpanda: null
  influxdb2-data:
  influxdb2-config: